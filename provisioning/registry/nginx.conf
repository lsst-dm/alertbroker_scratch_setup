upstream registry {
	server 127.0.0.1:8081;
}

# Run an unencrypted HTTP server to respond to ACME challenges for cert renewal.
# Redirect everything else to HTTPS.
server {
	listen 80;
	server_name alertschemas-scratch.lsst.codes;
	location /.well-known/acme-challenge/ {
		root /var/www/certbot;
	}

	location / {
		return 301 https://$host$request_uri;
	}
}

# Run an HTTPS server to proxy requests to the alertschema registry.
server {
	listen 443 ssl;
	server_name alertschemas-scratch.lsst.codes;

	ssl_certificate	    /etc/letsencrypt/live/alertschemas-scratch.lsst.codes/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/alertschemas-scratch.lsst.codes/privkey.pem;
	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	# /schemas/types
	# /schemas/ids/{id}
	# /schemas/ids/{id}/versions
	location ~* /schemas/types$ {
		include /etc/nginx/snippets/passthrough.conf;
	}
	location ~* /schemas/ids/[0-9]+(/versions)?$ {
		include /etc/nginx/snippets/passthrough.conf;
	}

	# /subjects
	# /subjects/{subj}/versions
	# /subjects/{subj}/versions/{version}
	# /subjects/{subj}/versions/{version}/schema
	# /subjects/{subj}/versions/{version}/referencedBy
	location ~* /subjects$ {
		include /etc/nginx/snippets/passthrough.conf;
	}
	location ~* /subjects/[-\w]+/versions$ {
		include /etc/nginx/snippets/passthrough.conf;
	}
	location ~* /subjects/[-\w]+/versions/(latest|[0-9]+)(/schema|/referencedBy)?$ {
		include /etc/nginx/snippets/passthrough.conf;
	}

	# /mode
	# /mode/{subj}
	# /config
	# /config/{subj}
	location ~* /(mode|config)(/[-\w]+)?$ {
		include /etc/nginx/snippets/passthrough.conf;
	}

	# Grant global access to users with a valid password
	location / {
		auth_basic "registry_write_access";
		auth_basic_user_file /etc/nginx/htpasswd;
		proxy_pass http://registry;
	}
}
